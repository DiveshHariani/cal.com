name: PR Update

on:
  pull_request_target:
    types: [opened, synchronize, labeled, reopened]
    branches:
        - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changes
    runs-on: buildjet-2vcpu-ubuntu-2204
    permissions:
      pull-requests: read
    outputs:
      has-files-requiring-all-checks: ${{ steps.filter.outputs.has-files-requiring-all-checks }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/dangerous-git-checkout
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            has-files-requiring-all-checks:
              - "!(**.md|.github/CODEOWNERS)"

  check-label:
    runs-on: buildjet-2vcpu-ubuntu-2204
    name: Check for E2E label
    steps:
      - name: Get PR from branch name
        id: get_pr
        uses: actions/github-script@v6
        with:
          script: |
            const branch = 'chore/improve-ci-workflow'; //'${{ github.event.inputs.branch || github.event.pull_request.ref }}';
            console.log('github.event.inputs.branch', '${{ github.event.inputs.branch }}');
            console.log(branch);
            const response = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${branch}`
            });

            if (response.data.length > 0) {
              const pr = response.data[0];
              core.setOutput('pr_number', pr.number);
              core.setOutput('pr_url', pr.html_url);
            } else {
              throw new Error(`No open pull request found for branch: ${branch}`);
            }
      - name: Check for 'ready-for-e2e' label
        id: check_label
        run: |
          PR_LABELS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "${{ steps.check-label.outputs.pr_url }}/labels" | jq -r '.[].name')

          if [[ "$PR_LABELS" == *"ready-for-e2e"* ]]; then
            echo "Label found"
            echo "run-e2e=true" >> $GITHUB_OUTPUT
          else
            echo "Label not found"
            echo "run-e2e=false" >> $GITHUB_OUTPUT
          fi
  type-check:
    name: Type check
    needs: [changes]
    if: ${{ needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/check-types.yml
    secrets: inherit

  lint:
    name: Linters
    needs: [changes]
    if: ${{ needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/lint.yml
    secrets: inherit

  unit-test:
    name: Tests
    needs: [changes]
    if: ${{ needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/unit-tests.yml
    secrets: inherit

  integration-test:
    name: Tests
    needs: [changes]
    if: ${{ needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/integration-tests.yml
    secrets: inherit

  build-api-v1:
    name: Production builds
    needs: [check-label]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' }}
    uses: ./.github/workflows/api-v1-production-build.yml
    secrets: inherit

  build-api-v2:
    name: Production builds
    needs: [check-label]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' }}
    uses: ./.github/workflows/api-v2-production-build.yml
    secrets: inherit

  build:
    name: Production builds
    needs: [check-label]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' }}
    uses: ./.github/workflows/production-build-without-database.yml
    secrets: inherit

  e2e:
    name: Tests
    needs: [check-label, build, build-api-v1, build-api-v2]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' }}
    uses: ./.github/workflows/e2e.yml
    secrets: inherit

  e2e-app-store:
    name: Tests
    needs: [check-label, build, build-api-v1, build-api-v2]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' }}
    uses: ./.github/workflows/e2e-app-store.yml
    secrets: inherit

  e2e-embed:
    name: Tests
    needs: [check-label, build, build-api-v1, build-api-v2]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' }}
    uses: ./.github/workflows/e2e-embed.yml
    secrets: inherit

  e2e-embed-react:
    name: Tests
    needs: [check-label, build, build-api-v1, build-api-v2]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' }}
    uses: ./.github/workflows/e2e-embed-react.yml
    secrets: inherit

  analyze:
    name: Analyze Build
    needs: [build]
    uses: ./.github/workflows/nextjs-bundle-analysis.yml
    secrets: inherit

  required:
    needs: [lint, type-check, unit-test, integration-test]
    if: always()
    runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: fail if conditional jobs failed
        if: needs.changes.outputs.has-files-requiring-all-checks == 'true' && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled'))
        run: exit 1

  e2e-required:
    needs: [check-label, build, build-api-v1, build-api-v2, e2e, e2e-embed, e2e-embed-react, e2e-app-store]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' }}
    runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: fail if conditional jobs failed
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled') || !contains(github.event.pull_request.labels.*.name, 'ready-for-e2e')
        run: exit 1
